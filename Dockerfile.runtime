# ====== STAGE 1: BUILDER ======
FROM python:3.12-slim AS builder

# Install build dependencies ONLY
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    gcc \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Install uv for fast builds
COPY --from=ghcr.io/astral-sh/uv:latest /uv /bin/

WORKDIR /build

# Copy dependency files
COPY pyproject.runtime.toml pyproject.toml
COPY uv.lock ./

# Install runtime dependencies ONLY (no dev group)
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev

# CRITICAL: Install only headless Chromium browser for runtime (smaller)
RUN uv run patchright install chromium-headless-shell

# Pre-compile Python bytecode for faster startup
RUN python -m compileall /build/.venv

# ====== STAGE 2: MINIMAL RUNTIME DEPS ======
FROM python:3.12-slim AS runtime-deps

# Install MINIMAL system dependencies for browser automation
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates \
    # Minimal dependencies for headless Chromium
    libnss3 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm1 \
    libxss1 \
    libasound2 \
    libxkbcommon0 \
    libatspi2.0-0 \
    libxfixes3 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# ====== STAGE 3: RUNTIME ======
FROM runtime-deps AS runtime

# Create non-root user (pattern from existing Dockerfiles)
RUN useradd -m -u 1000 mcpuser

WORKDIR /app

# Copy Python environment from builder
COPY --from=builder --chown=mcpuser:mcpuser /build/.venv /app/.venv

# Copy Patchright browser installation from builder
COPY --from=builder --chown=mcpuser:mcpuser /root/.cache/ms-playwright /home/mcpuser/.cache/ms-playwright

# Copy application code (respects .dockerignore)
COPY --chown=mcpuser:mcpuser linkedin_mcp_server /app/linkedin_mcp_server
COPY --chown=mcpuser:mcpuser pyproject.toml /app/
COPY --chown=mcpuser:mcpuser README.md LICENSE /app/

# Switch to non-root user
USER mcpuser

# Environment configuration
ENV PATH="/app/.venv/bin:$PATH" \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    # Patchright configuration - use installed browser
    PATCHRIGHT_SKIP_BROWSER_DOWNLOAD=0 \
    # Docker runtime flag for configuration adjustments
    DOCKER_RUNTIME=1 \
    # Optimize Python
    PYTHONOPTIMIZE=1

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import linkedin_mcp_server; print('OK')" || exit 1

# Entrypoint (pattern from existing Dockerfiles)
ENTRYPOINT ["python", "-m", "linkedin_mcp_server"]
CMD []
